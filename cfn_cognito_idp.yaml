AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template provisions Cognito Identity Pool for Inspector'

Parameters:
  cognitoUserPoolName:
    Type: String
    Default: 'Aspire-User-Pool'

Resources:
  # deploy aspire user pool using cognito/template.yaml SAM template!
  AspireUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: 'verified_email'
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      Schema:
        - Mutable: false
          Name: 'given_name'
          Required: true
        - Mutable: false
          Name: 'family_name'
          Required: true
        - Mutable: true
          Name: 'phone_number'
          Required: true
        - Mutable: true
          Name: 'address'
          Required: true
        - Mutable: true
          Name: 'gender'
        - Mutable: true
          Name: 'picture'
        - Mutable: false
          Name: 'birthdate'
          Required: true
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'prefix'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'industry'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'industry_tags'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'position'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'company'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'education_level'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'resume'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'linkedin'
        - AttributeDataType: 'Number'
          Mutable: true
          Name: 'credits'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'user_type'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'start_date'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'end_date'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'meetings_frequency'
        - AttributeDataType: 'String'
          Mutable: true
          Name: 'remaining_frequency'
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Ref cognitoUserPoolName

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: ADMIN
      UserPoolId: !Ref AspireUserPool

  MentorUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: MENTOR
      UserPoolId: !Ref AspireUserPool

  MenteeFreeUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: FREE
      UserPoolId: !Ref AspireUserPool

  MenteePaidUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: PAID
      UserPoolId: !Ref AspireUserPool

  AspireUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: AspireUserClient
      UserPoolId: !Ref AspireUserPool
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
      RefreshTokenValidity: 30
      PreventUserExistenceErrors: ENABLED
      GenerateSecret: false

  AspireS3ReadWritePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: AspireS3ReadPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource:
              - 'arn:aws:s3:::maxcompany' #change bucket name
      Roles:
      - !Ref AuthenticatedRole
      - !Ref UnauthenticatedRole

  AuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated:
                - 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': !Ref AspireIdentityPool
      Description: 'Role that can be assumed by someone who wants to use Inspector'
      RoleName: AspireAuthenticatedRole

  UnauthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated:
                - 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud': !Ref AspireIdentityPool
      Description: 'Role that can be assumed by someone who wants to use Inspector'
      RoleName: AspireUnauthenticatedRole

  AspireIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      IdentityPoolName: AspireIdentityPool
      CognitoIdentityProviders:
        - ClientId: !Ref AspireUserPoolClient
          ProviderName: !GetAtt AspireUserPool.ProviderName

  AspireIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref AspireIdentityPool
      Roles:
        'unauthenticated': !GetAtt UnauthenticatedRole.Arn
        'authenticated': !GetAtt AuthenticatedRole.Arn

Outputs:
  AspireIdp:
    Description: 'Cognito Identity Pool for Inspector'
    Value: !Ref AspireIdentityPool
